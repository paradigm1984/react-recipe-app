{"ast":null,"code":"import React from'react';import'./styles/Recipe.scss';import{Card,Button,ListGroup,ListGroupItem,Accordion,Col}from'react-bootstrap';// Fontawesome\nimport{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCaretDown}from'@fortawesome/free-solid-svg-icons';var Recipie=function Recipie(_ref){var title=_ref.title,calories=_ref.calories,image=_ref.image,ingredients=_ref.ingredients,cautions=_ref.cautions,filter=_ref.filter;// filters cautions list and doesnt show that div if there are no cautions\nvar cautionsList=cautions.map(function(caution){return/*#__PURE__*/React.createElement(\"li\",{className:\"caution-list-item\"},caution);});console.log(\"filter: \",filter);return/*#__PURE__*/React.createElement(Col,{lg:5,sm:10},/*#__PURE__*/React.createElement(Accordion,{defaultActiveKey:\"0\"},/*#__PURE__*/React.createElement(Card,{className:\"recipe-card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-img-container container\"},/*#__PURE__*/React.createElement(Card.Img,{variant:\"top\",src:image,alt:title})),/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(\"h2\",null,title)),/*#__PURE__*/React.createElement(\"div\",{className:\"basic-info-container\"},/*#__PURE__*/React.createElement(\"p\",{className:\"calories\"},\"calories: \",calories),/*#__PURE__*/React.createElement(ListGroup,{style:{display:cautionsList.length>0?'inherit':'none'}},/*#__PURE__*/React.createElement(\"p\",{className:\"cautions\"},\"Cautions:\"),/*#__PURE__*/React.createElement(\"li\",{style:{display:cautionsList.length>0?'inherit':'none'},className:\"cautions-list\"},cautionsList)),/*#__PURE__*/React.createElement(\"p\",{className:\"filter\"},\"Filter: \",filter)),/*#__PURE__*/React.createElement(\"div\",{className:\"recipie-list-container\"},/*#__PURE__*/React.createElement(Accordion.Toggle,{className:\"expand-button\",as:Button,variant:\"link\",eventKey:\"1\"},/*#__PURE__*/React.createElement(\"span\",null,\"View Ingredients\"),/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCaretDown,color:\"black\"})),/*#__PURE__*/React.createElement(Accordion.Collapse,{eventKey:\"1\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(ListGroup,{className:\"list-group-flush\"},ingredients.map(function(ingredient){return/*#__PURE__*/React.createElement(ListGroupItem,null,ingredient.text);}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(Accordion.Toggle,{className:\"expand-button\",as:Button,variant:\"link\",eventKey:\"1\"},/*#__PURE__*/React.createElement(\"span\",null,\"View Recipe\"),/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCaretDown,color:\"black\"})),/*#__PURE__*/React.createElement(Accordion.Collapse,{eventKey:\"1\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(ListGroup,{className:\"list-group-flush\"})))))));};export default Recipie;","map":{"version":3,"sources":["/Users/blancooo/Web-Development/React/recipe-app-mern/client/src/Recipe.js"],"names":["React","Card","Button","ListGroup","ListGroupItem","Accordion","Col","FontAwesomeIcon","faCaretDown","Recipie","title","calories","image","ingredients","cautions","filter","cautionsList","map","caution","console","log","display","length","ingredient","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './styles/Recipe.scss';\nimport { Card, Button, ListGroup, ListGroupItem, Accordion, Col } from 'react-bootstrap';\n// Fontawesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\n\nconst Recipie = ({ title, calories, image, ingredients, cautions, filter }) => {\n  // filters cautions list and doesnt show that div if there are no cautions\n  const cautionsList = cautions.map(caution => (\n    <li className=\"caution-list-item\">{ caution }</li>\n  ));\n  console.log(\"filter: \", filter);\n\n  return (\n    <Col lg={5} sm={10}>\n      <Accordion defaultActiveKey=\"0\">\n        <Card className=\"recipe-card\">\n          <div className=\"card-img-container container\">\n            <Card.Img variant=\"top\" src={ image } alt={ title } />\n          </div>\n          <Card.Header>\n            <h2>{ title }</h2>\n          </Card.Header>\n          <div className=\"basic-info-container\">\n            <p className=\"calories\">calories: { calories }</p>\n            <ListGroup style={{ display: (cautionsList.length > 0 ? 'inherit' : 'none') }}>\n              <p className=\"cautions\">Cautions:</p>\n              <li style={{ display: (cautionsList.length > 0 ? 'inherit' : 'none') }} className=\"cautions-list\">\n                { cautionsList }\n              </li>\n            </ListGroup>\n            <p className=\"filter\">Filter: { filter }</p>\n          </div>\n          <div className=\"recipie-list-container\">\n            <Accordion.Toggle className=\"expand-button\" as={ Button } variant=\"link\" eventKey=\"1\">\n              <span>View Ingredients</span>\n              <FontAwesomeIcon icon={ faCaretDown } color=\"black\" />\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"1\">\n              <Card.Body>\n                <ListGroup className=\"list-group-flush\">\n                  {\n                    ingredients.map(ingredient => (<ListGroupItem>{ingredient.text}</ListGroupItem>))\n                  }\n                </ListGroup>\n              </Card.Body>\n            </Accordion.Collapse>\n          </div>\n          <div className=\"\">\n            <Accordion.Toggle className=\"expand-button\" as={ Button } variant=\"link\" eventKey=\"1\">\n              <span>View Recipe</span>\n              <FontAwesomeIcon icon={ faCaretDown } color=\"black\" />\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"1\">\n              <Card.Body>\n                <ListGroup className=\"list-group-flush\">\n                  {\n                    // ingredients.map(ingredient => (<ListGroupItem>{ingredient.text}</ListGroupItem>))\n                  }\n                </ListGroup>\n              </Card.Body>\n            </Accordion.Collapse>\n          </div>\n        </Card>\n      </Accordion>\n    </Col> \n  );\n}\n\nexport default Recipie;\n"]},"metadata":{},"sourceType":"module"}