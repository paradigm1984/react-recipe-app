{"ast":null,"code":"var _jsxFileName = \"/Users/blancooo/Web-Development/React/recipe-app-mern/client/src/context/GlobalState.js\";\n// GlobalState.js\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; // Initial state\n\nconst initialState = {\n  recipies: [],\n  searchString: \"\",\n  queryString: \"\",\n  appDimensions: {\n    width: window.innerWidth,\n    height: window.innerHeight\n  }\n}; // Create context\n\nexport const GlobalContext = createContext(initialState); // Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  async function getRecipies() {\n    try {\n      const res = await axios.post('/api/recipie_search');\n      dispatch({\n        type: 'GET_RECIPIES',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'RECIPIE_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      recipies: state.recipies,\n      searchString: state.searchString,\n      appDimensions: state.appDimensions,\n      getRecipies\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/blancooo/Web-Development/React/recipe-app-mern/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","recipies","searchString","queryString","appDimensions","width","window","innerWidth","height","innerHeight","GlobalContext","GlobalProvider","children","state","dispatch","getRecipies","res","post","type","payload","data","err","response","error"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,YAAY,EAAE,EAFM;AAGpBC,EAAAA,WAAW,EAAE,EAHO;AAIpBC,EAAAA,aAAa,EAAE;AACdC,IAAAA,KAAK,EAAEC,MAAM,CAACC,UADA;AAEdC,IAAAA,MAAM,EAAEF,MAAM,CAACG;AAFD;AAJK,CAArB,C,CAUA;;AACA,OAAO,MAAMC,aAAa,GAAGd,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMW,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC,CAD+C,CAG/C;;AACA,iBAAee,WAAf,GAA6B;AAC5B,QAAI;AACH,YAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,qBAAX,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACRI,QAAAA,IAAI,EAAE,cADE;AAERC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFV,OAAD,CAAR;AAIA,KAPD,CAOE,OAAOC,GAAP,EAAY;AACbP,MAAAA,QAAQ,CAAC;AACRI,QAAAA,IAAI,EAAE,eADE;AAERC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG;AAFnB,OAAD,CAAR;AAIA;AACD;;AAED,sBAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACtCtB,MAAAA,QAAQ,EAAEY,KAAK,CAACZ,QADsB;AAEtCC,MAAAA,YAAY,EAAEW,KAAK,CAACX,YAFkB;AAGtCE,MAAAA,aAAa,EAAES,KAAK,CAACT,aAHiB;AAItCW,MAAAA;AAJsC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMNH,QANM,CAAR;AAQA,CA5BM","sourcesContent":["// GlobalState.js\n\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\n\n// Initial state\nconst initialState = {\n recipies: [],\n searchString: \"\",\n queryString: \"\",\n appDimensions: {\n  width: window.innerWidth,\n  height: window.innerHeight\n }\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n const [state, dispatch] = useReducer(AppReducer, initialState);\n\n // Actions\n async function getRecipies() {\n  try {\n   const res = await axios.post('/api/recipie_search');\n\n   dispatch({\n    type: 'GET_RECIPIES',\n    payload: res.data.data\n   });\n  } catch (err) {\n   dispatch({\n    type: 'RECIPIE_ERROR',\n    payload: err.response.data.error\n   });\n  }\n }\n \n return (<GlobalContext.Provider value={{\n  recipies: state.recipies,\n  searchString: state.searchString,\n  appDimensions: state.appDimensions,\n  getRecipies\n }}>\n  {children}\n </GlobalContext.Provider>);\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}