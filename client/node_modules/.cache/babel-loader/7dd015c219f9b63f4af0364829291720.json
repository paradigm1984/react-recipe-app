{"ast":null,"code":"import _slicedToArray from \"/Users/blancooo/Web-Development/React/recipie-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/blancooo/Web-Development/React/recipie-app/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  // you can write actuakl JS anywhere between opening up the component and the return function\n  const APP_ID = \"4ca90bc3\";\n  const APP_KEY = \"efcca35385635d8635bd078f5b89099f\";\n  const exampleRequest = `https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        setCounter = _useState2[1]; // by adding an empty array to the useEffect function as a param, itll only run when the app has mounted. you could add the state in which you want this function to run within the array.\n\n\n  useEffect(() => {\n    console.log(\"useEffect has been run\");\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Recipe Search\"), React.createElement(\"form\", {\n    className: \"search-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"search-bar\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setCounter(counter + 1),\n    className: \"search-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, counter)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/blancooo/Web-Development/React/recipie-app/src/App.js"],"names":["React","useEffect","useState","App","APP_ID","APP_KEY","exampleRequest","counter","setCounter","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAK;AACjB;AAEA,QAAMC,MAAM,GAAG,UAAf;AACA,QAAMC,OAAO,GAAG,kCAAhB;AAEA,QAAMC,cAAc,GAAI,kDAAiDF,MAAO,YAAWC,OAAQ,EAAnG;;AANiB,oBAQaH,QAAQ,CAAC,CAAD,CARrB;AAAA;AAAA,QAQVK,OARU;AAAA,QAQDC,UARC,kBAUjB;;;AACAP,EAAAA,SAAS,CAAC,MAAK;AACbQ,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIE,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,IAAI,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAKF,UAAU,CAACD,OAAO,GAAG,CAAX,CAAhC;AAA+C,IAAA,SAAS,EAAC,eAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0EA,OAA1E,CAFF,CAFF,CADF;AASD,CAxBD;;AA0BA,eAAeJ,GAAf","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport './App.css';\n\nconst App = ()=> {\n// you can write actuakl JS anywhere between opening up the component and the return function\n\nconst APP_ID = \"4ca90bc3\";\nconst APP_KEY = \"efcca35385635d8635bd078f5b89099f\";\n\nconst exampleRequest = `https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\nconst [counter, setCounter] = useState(0);\n\n// by adding an empty array to the useEffect function as a param, itll only run when the app has mounted. you could add the state in which you want this function to run within the array.\nuseEffect(()=> {\n  console.log(\"useEffect has been run\");\n}, []);\n\n  return (\n    <div className=\"App\">\n      <h2>Recipe Search</h2>\n      <form className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\"/>\n        <button onClick={()=> setCounter(counter + 1)} className=\"search-button\">{counter}</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}