{"ast":null,"code":"var _jsxFileName = \"/Users/blancooo/Web-Development/React/recipe-app-react/client/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Recipie from './Recipe';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/App.scss';\nimport { InputGroup, Form, Button, Row } from 'react-bootstrap';\nimport Footer from './Footer';\n\nconst App = () => {\n  const APP_ID = \"4ca90bc3\";\n  const APP_KEY = \"efcca35385635d8635bd078f5b89099f\";\n  const [recipies, setRecipies] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [queryString, setQueryString] = useState(\"\");\n  const [appDimensions, setAppDimensions] = React.useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  }); // by adding an empty array to the useEffect function as a param, itll only run when the app has mounted. you could add the state in which you want this function to run within the array.\n\n  useEffect(() => {\n    getRecipies();\n  }, [queryString]);\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWidthAndHeight);\n    return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\n  });\n\n  const updateWidthAndHeight = () => {\n    setAppDimensions({\n      minWidth: window.innerWidth,\n      minHeight: window.innerHeight\n    });\n  }; // async functions are a way to use promises. similar to .then().\n\n\n  const getRecipies = async () => {\n    // gives you an await option that will make JS wait until the data is recieved and then assigns it to a var. especially useful when getting a response from an API.\n    let response;\n    let data;\n    response = await fetch(`https://api.edamam.com/search?q=${queryString}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    console.log(\"response no filter: \", response);\n    data = await response.json();\n    console.log(\"data: \", data.hits);\n    setRecipies(data.hits);\n  };\n\n  const updateSearch = e => {\n    setSearchString(e.target.value);\n  };\n\n  const submitSearch = e => {\n    e.preventDefault();\n    setQueryString(searchString);\n    getRecipies(queryString);\n    setSearchString(\"\");\n    updateWidthAndHeight();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"submit-section\",\n    style: appDimensions - 90,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"app-header-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Ingredient Search\"), /*#__PURE__*/React.createElement(Form, {\n    id: \"recipeSubmit\",\n    onSubmit: submitSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-3 recipe-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Search\",\n    \"aria-label\": \"Recipe\",\n    \"aria-describedby\": \"basic-addon2\",\n    className: \"search-bar\",\n    type: \"text\",\n    value: searchString,\n    onChange: updateSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    type: \"submit\",\n    className: \"search-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"response-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"recipie-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, recipies.map(recipe => /*#__PURE__*/React.createElement(Recipie, {\n    key: recipe.recipe.uri,\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories.toFixed(0),\n    image: recipe.recipe.image,\n    ingredients: recipe.recipe.ingredients,\n    cautions: recipe.recipe.cautions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/blancooo/Web-Development/React/recipe-app-react/client/src/App.js"],"names":["React","useEffect","useState","Recipie","InputGroup","Form","Button","Row","Footer","App","APP_ID","APP_KEY","recipies","setRecipies","searchString","setSearchString","queryString","setQueryString","appDimensions","setAppDimensions","width","window","innerWidth","height","innerHeight","getRecipies","addEventListener","updateWidthAndHeight","removeEventListener","minWidth","minHeight","response","data","fetch","console","log","json","hits","updateSearch","e","target","value","submitSearch","preventDefault","map","recipe","uri","label","calories","toFixed","image","ingredients","cautions"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Recipie from './Recipe';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/App.scss';\nimport { InputGroup, Form, Button, Row } from 'react-bootstrap';\nimport Footer from './Footer';\n\nconst App = () => {\n  \n  const APP_ID = \"4ca90bc3\";\n  const APP_KEY = \"efcca35385635d8635bd078f5b89099f\";\n  const [recipies, setRecipies] = useState([]);  \n  const [searchString, setSearchString] = useState(\"\");\n  const [queryString, setQueryString] = useState(\"\");\n  const [appDimensions, setAppDimensions] = React.useState({width: window.innerWidth, height: window.innerHeight});\n\n  // by adding an empty array to the useEffect function as a param, itll only run when the app has mounted. you could add the state in which you want this function to run within the array.\n  useEffect(()=> {\n    getRecipies();\n  }, [queryString]);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWidthAndHeight);\n    return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\n  });\n\n  const updateWidthAndHeight = () => {\n    setAppDimensions({minWidth: window.innerWidth, minHeight: window.innerHeight})\n  };\n\n  // async functions are a way to use promises. similar to .then().\n  const getRecipies = async () => {\n    // gives you an await option that will make JS wait until the data is recieved and then assigns it to a var. especially useful when getting a response from an API.\n    let response;\n    let data;\n\n    response = await fetch(`https://api.edamam.com/search?q=${queryString}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    console.log(\"response no filter: \", response);\n    data = await response.json();\n\n    console.log(\"data: \", data.hits);\n    setRecipies(data.hits);\n  }\n\n  const updateSearch = e => {\n    setSearchString(e.target.value);\n  }\n\n  const submitSearch = e => {\n    e.preventDefault();\n    setQueryString(searchString);\n    getRecipies(queryString);\n    setSearchString(\"\");\n    updateWidthAndHeight();\n  }\n\n  return (\n    <div className=\"app\">\n      <section className=\"submit-section\" style={appDimensions - 90}>\n        <h2 className=\"app-header-1\" >Ingredient Search</h2>\n        <Form id=\"recipeSubmit\" onSubmit={submitSearch}>\n          <InputGroup className=\"mb-3 recipe-input\">\n            <Form.Control\n              placeholder=\"Search\"\n              aria-label=\"Recipe\"\n              aria-describedby=\"basic-addon2\"\n              className=\"search-bar\"\n              type=\"text\"\n              value={searchString}\n              onChange={updateSearch}\n            />\n            <InputGroup.Append>    \n              <Button variant=\"outline-secondary\" type=\"submit\" className=\"search-button\">Submit</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form>\n      </section>\n      <section className=\"response-section\">\n        <Row className=\"recipie-row\">\n          {recipies.map(recipe => (\n            <Recipie\n              key={recipe.recipe.uri}\n              title={recipe.recipe.label}\n              calories={recipe.recipe.calories.toFixed(0)}\n              image={recipe.recipe.image}\n              ingredients={recipe.recipe.ingredients}\n              cautions={recipe.recipe.cautions}\n            />\n          ))}\n        </Row>\n      </section>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}